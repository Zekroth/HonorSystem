@page
@using HonorSystem.sakila
@model HonorSystem.Pages.HonorEntry.BulkInsertModel

@{
    ViewData["Title"] = "BulkInsert";
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Inizializzazione DataTable
        $('#players').DataTable({
            "paging": true,
            "searching": true,
            "ordering": true,
            "pageLength": 25,
            "language": {
                "lengthMenu": "Mostra _MENU_ righe per pagina",
                "search": "Cerca:",
                "info": "Mostra da _START_ a _END_ di _TOTAL_ righe",
                "infoEmpty": "Nessuna riga disponibile",
                "paginate": {
                    "next": "Avanti",
                    "previous": "Indietro"
                }
            },
        });

        const selectAllCheckbox = document.getElementById('selectAll');
        const playerCheckboxes = document.querySelectorAll('.player-checkbox');
        const selectedCountSpan = document.getElementById('selectedCount');
        const rows = document.querySelectorAll('.clickable-row');

        // Funzione per aggiornare il conteggio delle checkbox selezionate
        function updateSelectedCount() {
            const selectedCount = document.querySelectorAll('.player-checkbox:checked').length;
            selectedCountSpan.textContent = selectedCount;
        }

        // Selezione/Deselezione di tutte le checkbox
        selectAllCheckbox.addEventListener('change', function () {
            const isChecked = this.checked;

            setTimeout(() => {
                playerCheckboxes.forEach(checkbox => {
                    checkbox.checked = isChecked;
                    checkbox.dispatchEvent(new Event('change')); // Forza l'aggiornamento
                });
            }, 10); // Timeout minimo per garantire che il cambio avvenga
        });


        // Aggiornamento stato "Seleziona Tutti" e conteggio selezionati
        playerCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                selectAllCheckbox.checked = Array.from(playerCheckboxes).every(cb => cb.checked);
                updateSelectedCount();
            });
        });

        // Gestione click sulle righe
        rows.forEach(row => {
            row.addEventListener('click', function (e) {
                if (e.target.tagName !== 'INPUT' && e.target.tagName !== 'LABEL') {
                    const checkboxId = this.dataset.checkboxId;
                    const checkbox = document.getElementById(checkboxId);
                    if (checkbox) {
                        checkbox.checked = !checkbox.checked;
                        checkbox.dispatchEvent(new Event('change')); // Forza l'aggiornamento
                    }
                }
            });
        });

        // Aggiorna il conteggio iniziale se ci sono checkbox pre-selezionate
        updateSelectedCount();
    });

    // Gestione del cambio tipo di punteggio
    function onChange() {
        var honorEntryTypeList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.HonorEntryTypes)) || [];
        var selectedHonorList = honorEntryTypeList.find(x => x.IdHonorEntryType == document.getElementById("BulkInsertViewModel_HonorEntryTypeId").value);

        if (!selectedHonorList) {
            console.log("HonorEntryType non definito.");
            return;
        }

        document.getElementById("BulkInsertViewModel_AssignedPoints").value = selectedHonorList.DefaultPoints;
        document.getElementById("BulkInsertViewModel_Description").value = selectedHonorList.Description;

        if (selectedHonorList.Expiration == 0) {
            document.getElementById("BulkInsertViewModel_ExpirationDate").value = null;
        } else {
            var newDate = addDaysToDate(Date.now(), selectedHonorList.Expiration);
            document.getElementById("BulkInsertViewModel_ExpirationDate").value = newDate.toISOString().substr(0, 16);
        }
    }

    window.onload = onChange;
</script>


<h1>Inserimento Punti</h1>
<hr />

<div class="row">
    <div class="col-auto">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group" style="margin-bottom: 10px;">
                <label asp-for="BulkInsertViewModel.AssignedPoints" class="control-label bg-dark">Punti
                    Assegnati</label>
                <input asp-for="BulkInsertViewModel.AssignedPoints" class="form-control bg-dark" />
                <span asp-validation-for="BulkInsertViewModel.AssignedPoints" class="text-danger"></span>
            </div>
            <div class="form-group" style="margin-bottom: 10px;">
                <label asp-for="BulkInsertViewModel.Description" class="control-label">Descrizione</label>
                <input asp-for="BulkInsertViewModel.Description" class="form-control bg-dark" />
                <span asp-validation-for="BulkInsertViewModel.Description" class="text-danger"></span>
            </div>
            <div class="form-group" style="margin-bottom: 10px;">
                <label asp-for="BulkInsertViewModel.ExpirationDate" class="control-label">Scadenza</label>
                <input asp-for="BulkInsertViewModel.ExpirationDate" class="form-control bg-dark" />
                <span asp-validation-for="BulkInsertViewModel.ExpirationDate" class="text-danger"></span>
            </div>
            <div class="form-group" style="margin-bottom: 30px;">
                <label asp-for="BulkInsertViewModel.HonorEntryTypeId" class="control-label">Tipo di Punteggio</label>
                <select asp-for="BulkInsertViewModel.HonorEntryTypeId" class="form-control bg-dark"
                    asp-items="ViewBag.HonorEntryTypeId" onchange="onChange()"></select>
            </div>

            <!-- Bottoni e select all-->
            <div class="d-flex align-items-center" style="gap: 10px">
                <div class="form-group" style="margin-bottom: 10px;">
                    <input type="checkbox" id="selectAll" class="form-check-input" />
                    <label class="form-check-label" for="selectAll">
                        Seleziona Tutti (<span id="selectedCount">0</span>)
                    </label>
                </div>

                <div class="form-group" style="margin-bottom: 10px;">
                    <input type="submit" value="Salva" class="btn btn-primary" />
                    <a asp-page="Index" class="btn btn-danger"><i class="bi bi-arrow-left"></i></a>
                </div>
            </div>

            <!-- Lista checkbox in tabella -->
            <div class="table-responsive" style="padding-left: 10px; padding-right: 10px;">
                <div id="playerList">
                    <table id="players" class="display table table-striped table-bordered align-left-table">
                        <thead>
                            <tr>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var player in (IEnumerable<SelectListItem>)ViewBag.PlayerId)
                            {
                                <tr class="clickable-row" data-checkbox-id="player-@player.Value">
                                    <td>
                                        <div class="form-check">
                                            <input type="checkbox" name="BulkInsertViewModel.PlayerId" value="@player.Value"
                                                class="form-check-input player-checkbox" id="player-@player.Value" />
                                            <label class="form-check-label" for="player-@player.Value">@player.Text</label>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

        if (ViewBag.HonorEntryTypes == null || ViewBag.HonorEntryTypes?.Count == 0)
        {
            // TODO: Throw error
        }

        List<Honorentrytype> honorEntryTypes = ((List<Honorentrytype>)ViewBag.HonorEntryTypes);

    }
}